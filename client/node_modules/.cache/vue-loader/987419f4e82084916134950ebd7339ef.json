{"remainingRequest":"/Users/kempatkinson/Desktop/ibidmobile2/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kempatkinson/Desktop/ibidmobile2/client/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kempatkinson/Desktop/ibidmobile2/client/src/views/Home.vue","mtime":1587691069523},{"path":"/Users/kempatkinson/Desktop/ibidmobile2/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kempatkinson/Desktop/ibidmobile2/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kempatkinson/Desktop/ibidmobile2/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kempatkinson/Desktop/ibidmobile2/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IFN3aW5nID0gcmVxdWlyZSgnc3dpbmcnKQoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICd2dWUtc3dpbmcnLAoKICBwcm9wczogWydjb25maWcnXSwKCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBzdGFjazogbnVsbCwKICAgICAgY2FyZHM6IFtdLAogICAgICBvYnNlcnZlcjogbnVsbAogICAgfQogIH0sCgogIG1vdW50ZWQgKCkgewogICAgdGhpcy5zdGFjayA9IFN3aW5nLlN0YWNrKHRoaXMuY29uZmlnIHx8IHt9KQogICAgbGV0IGNoaWxkcmVuID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodGhpcy4kZWwuY2hpbGRyZW4pCiAgICBjaGlsZHJlbi5mb3JFYWNoKGVsID0+IHsKICAgICAgdGhpcy5jYXJkcy5wdXNoKHRoaXMuc3RhY2suY3JlYXRlQ2FyZChlbCkpCiAgICB9KQoKICAgIC8vIE9ic2VydmUgY2hhbmdlcyBpbiBET00KICAgIHRoaXMub2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcihtdXRhdGlvbnMgPT4gewogICAgICBjb25zdCBhZGRlZEVsZW1lbnRzID0gW10KICAgICAgY29uc3QgcmVtb3ZlZEVsZW1lbnRzID0gW10KICAgICAgbXV0YXRpb25zLmZvckVhY2goKHsgYWRkZWROb2RlcywgcmVtb3ZlZE5vZGVzIH0pID0+IHsKICAgICAgICBhZGRlZEVsZW1lbnRzLnB1c2goLi4uYWRkZWROb2RlcykKICAgICAgICByZW1vdmVkRWxlbWVudHMucHVzaCguLi5yZW1vdmVkTm9kZXMpCiAgICAgIH0pCgogICAgICAvLyBDcmVhdGUgYSBuZXcgY2FyZCBmb3IgZWFjaCBuZXcgZWxlbWVudAogICAgICBhZGRlZEVsZW1lbnRzLmZvckVhY2goZWwgPT4gewogICAgICAgIC8vIElnbm9yZSBpZiB0aGUgYWRkZWQgZWxlbWVudCBpcyBhbHNvIHJlbW92ZWQKICAgICAgICBjb25zdCBpID0gcmVtb3ZlZEVsZW1lbnRzLmluZGV4T2YoZWwpCiAgICAgICAgaWYgKGkgIT09IC0xKSB7CiAgICAgICAgICByZW1vdmVkRWxlbWVudHMuc3BsaWNlKGksIDEpCiAgICAgICAgICByZXR1cm4KICAgICAgICB9CgogICAgICAgIGNvbnN0IGNhcmQgPSB0aGlzLnN0YWNrLmdldENhcmQoZWwpCiAgICAgICAgaWYgKGNhcmQgPT0gbnVsbCkgewogICAgICAgICAgdGhpcy5jYXJkcy5wdXNoKHRoaXMuc3RhY2suY3JlYXRlQ2FyZChlbCkpCiAgICAgICAgfQogICAgICB9KQoKICAgICAgLy8gUmVtb3ZlIHRoZSBjYXJkIGlmIHRoZSBlbGVtZW50IGlzIGdvbmUKICAgICAgcmVtb3ZlZEVsZW1lbnRzLmZvckVhY2goZWwgPT4gewogICAgICAgIGNvbnN0IGNhcmQgPSB0aGlzLnN0YWNrLmdldENhcmQoZWwpCiAgICAgICAgaWYgKGNhcmQgIT0gbnVsbCkgewogICAgICAgICAgdGhpcy5jYXJkcy5zcGxpY2UodGhpcy5jYXJkcy5pbmRleE9mKGNhcmQpLCAxKQogICAgICAgICAgdGhpcy5zdGFjay5kZXN0cm95Q2FyZChjYXJkKQogICAgICAgIH0KICAgICAgfSkKICAgIH0pCiAgICB0aGlzLm9ic2VydmVyLm9ic2VydmUodGhpcy4kZWwsIHsgY2hpbGRMaXN0OiB0cnVlIH0pCgogICAgLy8gUmVnaXN0ZXIgZXZlbnRzCiAgICBjb25zdCBldmVudHMgPSBbCiAgICAgICd0aHJvd291dCcsCiAgICAgICd0aHJvd291dGVuZCcsCiAgICAgICd0aHJvd291dGRvd24nLAogICAgICAndGhyb3dvdXRsZWZ0JywKICAgICAgJ3Rocm93b3V0cmlnaHQnLAogICAgICAndGhyb3dvdXR1cCcsCiAgICAgICd0aHJvd2luJywKICAgICAgJ3Rocm93aW5lbmQnLAogICAgICAnZHJhZ3N0YXJ0JywKICAgICAgJ2RyYWdtb3ZlJywKICAgICAgJ2RyYWdlbmQnLAogICAgICAnZGVzdHJveUNhcmQnCiAgICBdCgogICAgZm9yIChsZXQgZXZlbnQgb2YgZXZlbnRzKSB7CiAgICAgIHRoaXMuc3RhY2sub24oZXZlbnQsIGUgPT4gewogICAgICAgIHRoaXMuJGVtaXQoZXZlbnQsIGUpCiAgICAgIH0pCiAgICB9CiAgfSwKCiAgYmVmb3JlRGVzdHJveSAoKSB7CiAgICB0aGlzLm9ic2VydmVyLmRpc2Nvbm5lY3QoKQogIH0sCgogIENhcmQ6IFN3aW5nLkNhcmQsCiAgRGlyZWN0aW9uOiBTd2luZy5EaXJlY3Rpb24sCiAgU3RhY2s6IFN3aW5nLlN0YWNrCn0K"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"list\" class=\"container\">\n    <div class=\"row\" v-for=\"data in posts\"  :key=\"data.id\">\n      <div class=\"col d-flex justify-content-center\">\n        <router-link :to=\"{ name: 'post', params: {id: data.id}}\">\n          <div class=\"card\" style=\"width: 18rem;\" v-on:click=\"select($event)\" :id=\"data.id\">\n            <br />\n            <h3 class=\"card-title\">{{data.name}}</h3>\n\n            <img class=\"card-image-top\" src=\"../assets/sample.jpg\" />\n            <div class=\"card-body\">\n            <p class=\"card-text\">Current Bid : {{data.price}}</p>\n\n            <button class=\"btn btn-primary\"> Bid Now! </button>\n          </div>\n              </div>\n        </router-link>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nconst Swing = require('swing')\n\nexport default {\n  name: 'vue-swing',\n\n  props: ['config'],\n\n  data () {\n    return {\n      stack: null,\n      cards: [],\n      observer: null\n    }\n  },\n\n  mounted () {\n    this.stack = Swing.Stack(this.config || {})\n    let children = Array.prototype.slice.call(this.$el.children)\n    children.forEach(el => {\n      this.cards.push(this.stack.createCard(el))\n    })\n\n    // Observe changes in DOM\n    this.observer = new MutationObserver(mutations => {\n      const addedElements = []\n      const removedElements = []\n      mutations.forEach(({ addedNodes, removedNodes }) => {\n        addedElements.push(...addedNodes)\n        removedElements.push(...removedNodes)\n      })\n\n      // Create a new card for each new element\n      addedElements.forEach(el => {\n        // Ignore if the added element is also removed\n        const i = removedElements.indexOf(el)\n        if (i !== -1) {\n          removedElements.splice(i, 1)\n          return\n        }\n\n        const card = this.stack.getCard(el)\n        if (card == null) {\n          this.cards.push(this.stack.createCard(el))\n        }\n      })\n\n      // Remove the card if the element is gone\n      removedElements.forEach(el => {\n        const card = this.stack.getCard(el)\n        if (card != null) {\n          this.cards.splice(this.cards.indexOf(card), 1)\n          this.stack.destroyCard(card)\n        }\n      })\n    })\n    this.observer.observe(this.$el, { childList: true })\n\n    // Register events\n    const events = [\n      'throwout',\n      'throwoutend',\n      'throwoutdown',\n      'throwoutleft',\n      'throwoutright',\n      'throwoutup',\n      'throwin',\n      'throwinend',\n      'dragstart',\n      'dragmove',\n      'dragend',\n      'destroyCard'\n    ]\n\n    for (let event of events) {\n      this.stack.on(event, e => {\n        this.$emit(event, e)\n      })\n    }\n  },\n\n  beforeDestroy () {\n    this.observer.disconnect()\n  },\n\n  Card: Swing.Card,\n  Direction: Swing.Direction,\n  Stack: Swing.Stack\n}\n</script>\n\n<style>\n<style scoped>\n.card {\n  margin-bottom: 10%;\n  align-content: center;\n}\nh3,\np {\n  color: black;\n}\nimg {\n  margin: 5%;\n}\np {\n  margin-bottom: 5%;\n}\n\nbutton {\n  width: 40%;\n  \n}\n</style>"]}]}