{"remainingRequest":"/Users/kempatkinson/Desktop/ibid-mobile/ibidmobile-front/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/kempatkinson/Desktop/ibid-mobile/ibidmobile-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kempatkinson/Desktop/ibid-mobile/ibidmobile-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kempatkinson/Desktop/ibid-mobile/ibidmobile-front/src/views/Items.vue?vue&type=template&id=563c6414&scoped=true&","dependencies":[{"path":"/Users/kempatkinson/Desktop/ibid-mobile/ibidmobile-front/src/views/Items.vue","mtime":1591481922952},{"path":"/Users/kempatkinson/Desktop/ibid-mobile/ibidmobile-front/node_modules/cache-loader/dist/cjs.js","mtime":1591384219978},{"path":"/Users/kempatkinson/Desktop/ibid-mobile/ibidmobile-front/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1591384224541},{"path":"/Users/kempatkinson/Desktop/ibid-mobile/ibidmobile-front/node_modules/cache-loader/dist/cjs.js","mtime":1591384219978},{"path":"/Users/kempatkinson/Desktop/ibid-mobile/ibidmobile-front/node_modules/vue-loader/lib/index.js","mtime":1591384224540}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}