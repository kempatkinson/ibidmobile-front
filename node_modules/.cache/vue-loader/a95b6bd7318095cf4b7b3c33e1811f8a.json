{"remainingRequest":"/Users/kempatkinson/Desktop/ibid-mobile/ibidmobile-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kempatkinson/Desktop/ibid-mobile/ibidmobile-front/src/views/Favorites.vue?vue&type=style&index=0&id=192b2e0d&lang=scss&scoped=true&","dependencies":[{"path":"/Users/kempatkinson/Desktop/ibid-mobile/ibidmobile-front/src/views/Favorites.vue","mtime":1593124632631},{"path":"/Users/kempatkinson/Desktop/ibid-mobile/ibidmobile-front/node_modules/css-loader/dist/cjs.js","mtime":1591384220692},{"path":"/Users/kempatkinson/Desktop/ibid-mobile/ibidmobile-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1591384224540},{"path":"/Users/kempatkinson/Desktop/ibid-mobile/ibidmobile-front/node_modules/postcss-loader/src/index.js","mtime":1591384222686},{"path":"/Users/kempatkinson/Desktop/ibid-mobile/ibidmobile-front/node_modules/sass-loader/dist/cjs.js","mtime":1591384223667},{"path":"/Users/kempatkinson/Desktop/ibid-mobile/ibidmobile-front/node_modules/cache-loader/dist/cjs.js","mtime":1591384219978},{"path":"/Users/kempatkinson/Desktop/ibid-mobile/ibidmobile-front/node_modules/vue-loader/lib/index.js","mtime":1591384224540}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojZmF2b3JpdGVzIHsKICBhbGlnbi1jb250ZW50OiBjZW50ZXI7Cn0KLmNhcmQgewogIG1hcmdpbi1ib3R0b206IDEwJTsKICBib3JkZXI6IGJsYWNrIDAuNXB4IHNvbGlkOwogIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmZkYmY3Owp9CmgzLApoNSwKcCB7CiAgY29sb3I6IGJsYWNrOwp9CmltZyB7CiAgbWFyZ2luOiA1JTsKfQpwIHsKICBtYXJnaW4tYm90dG9tOiA1JTsKfQoKYnV0dG9uIHsKICB3aWR0aDogNDAlOwp9Ci5jYXJkLXRpdGxlIHsKICBtYXJnaW4tdG9wOiA1JTsKfQoKLmJ0bi1wcmltYXJ5IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWY3YThjOwogIGJvcmRlci1jb2xvcjogIzM0M2E0MDsKICBjb2xvcjogd2hpdGU7CiAgbWFyZ2luOiA1cHg7Cn0KLmNvbnRhaW5lciB7CiAgcGFkZGluZy10b3A6IDEwMHB4OwogIHdpZHRoOiAxMDAlOwogIHBvc2l0aW9uOiBzdGF0aWM7CiAgdG9wOiAxNXZoOwp9CgouaGVhcnQgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IC00JTsKICByaWdodDogLTEwJTsKICB3aWR0aDogMTAwcHg7CiAgaGVpZ2h0OiAxMDBweDsKICBiYWNrZ3JvdW5kOiB1cmwoImh0dHBzOi8vY3NzYW5pbWF0aW9uLnJvY2tzL2ltYWdlcy9wb3N0cy9zdGVwcy9oZWFydC5wbmciKQogICAgbm8tcmVwZWF0OwogIGJhY2tncm91bmQtcG9zaXRpb246IDAgMDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1wb3NpdGlvbiAxcyBzdGVwcygyOCk7CiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMHM7CgogICYuYW1hY3RpdmUgewogICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMXM7CiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjgwMHB4IDA7CiAgfQp9Cg=="},{"version":3,"sources":["Favorites.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Favorites.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"favorites\" class=\"container\">\n    <div class=\"row\">\n      <div class=\"col d-flex justify-content-center\">\n        <button v-on:click=\"empty\">empty favorites</button>\n      </div>\n    </div>\n    <br />\n    <div class=\"b-container\" v-show=\"!(isDesktop)\">\n      <div class=\"row\" v-for=\"data in favorites\" :key=\"data.id\">\n        <div class=\"col-1\"></div>\n        <div class=\"card col-10\">\n          <div class=\"card-header\" ref=\"header\">\n            <div class=\"card-title\" style=\"position: relative\">\n              <router-link :to=\"{ name: 'post', params: {id: data.id}}\">\n                <h3 ref=\"items\">{{data.name}}</h3>\n              </router-link>\n              <div\n                class=\"heart\"\n                v-on:click=\"toggle(data.id)\"\n                v-bind:key=\"data.id\"\n                v-bind:style=\"heartHeight\"\n                v-bind:class=\"{amactive: activeKeys[activeKeys.findIndex((element) => element.id === data.id)].active}\"\n              ></div>\n            </div>\n          </div>\n          <div class=\"card-body row\" v-on:click=\"select($event)\" :id=\"data.id\">\n            <div class=\"col-5 d-flex align-items-center\">\n              <img class=\"card-image\" v-bind:src=\"getImage(data.image)\" />\n            </div>\n            <div class=\"col-7\">\n              <p v-if=\"data.sold\" class=\"card-text\">Sold Out!</p>\n              <div v-if=\"(!data.sold) && (timeUntil(data.end) > 0)\">\n                <p v-if=\"(timeUntil(data.end) > 0 )\" class=\"card-text\">Live!</p>\n                <p class=\"card-text\">Current Bid : {{data.price}}</p>\n                <p class=\"card-text\">Value : {{data.value}}</p>\n                <router-link :to=\"{ name: 'post', params: {id: data.id}}\">\n                  <button class=\"btn btn-primary\">Bid Now!</button>\n                </router-link>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-footer\">\n            <countdown :time=\"timeUntil(data.end)\" v-if=\"(timeUntil(data.end) > 0)\">\n              <div\n                slot-scope=\"props\"\n                class=\"date-text\"\n              >Bidding closes in {{ props.days }} days, {{ props.hours }} hours, {{ props.minutes }} minutes!</div>\n            </countdown>\n            <div class=\"date-text\" v-if=\"(timeUntil(data.end) <= 0)\">Auction Over!</div>\n          </div>\n        </div>\n        <div class=\"col-1\"></div>\n      </div>\n    </div>\n\n    <div class=\"b-container\" v-show=\"(isDesktop)\">\n      <div class=\"row\">\n        <div class=\"col-9\">\n          <div class=\"selection\" id=\"gap\">\n            <select v-model=\"selected\" id=\"dropdown\">\n              <option v-for=\"option in options\" v-bind:key=\"option.value\">{{ option.text }}</option>\n            </select>\n            <br />\n            <span v-if=\"selected\">Selected: {{ selected }}</span>\n          </div>\n          <div class=\"row\" v-for=\"(chunk,index) in chunks\" :key=\"index\">\n            <div class=\"single offset-md-1\" v-for=\"data in chunk\" :key=\"data.id\">\n              <div class=\"card\" v-bind:style=\"containerStyle\">\n                <div class=\"card-header\" ref=\"header\">\n                  <div class=\"card-title\" ref=\"desktopItems\" style=\"position: relative\">\n                    <h3 v-on:click=\"toggler(data.id)\">{{data.name}}</h3>\n                    <div\n                      class=\"heart\"\n                      v-on:click=\"toggle(data.id)\"\n                      v-bind:key=\" 'heart: ' + data.id\"\n                      v-bind:style=\"heartHeightDesktop\"\n                      v-bind:class=\"{amactive: activeKeys[activeKeys.findIndex((element) => element.id === data.id)].active}\"\n                    ></div>\n                  </div>\n                </div>\n                <div class=\"card-body\" v-on:click=\"toggler(data.id)\">\n                  <div class=\"row\" v-on:click=\"select($event)\" :id=\"data.id\">\n                    <div class=\"col-5\">\n                      <img class=\"card-image\" v-bind:src=\"getImage(data.image)\" />\n                    </div>\n                    <div class=\"col-7\">\n                      <p v-if=\"data.sold\" class=\"card-text\">Sold Out!</p>\n                      <div v-if=\"(!data.sold) && (timeUntil(data.end) > 0)\">\n                        <p v-if=\"(timeUntil(data.end) > 0 )\" class=\"card-text\">Live!</p>\n                        <p class=\"card-text\">Current Bid : {{data.price}}</p>\n                        <p class=\"card-text\">Value : {{data.value}}</p>\n                        <router-link :to=\"{ name: 'post', params: {id: data.id}}\">\n                          <button class=\"btn btn-primary\">Bid Now!</button>\n                        </router-link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"card-footer\">\n                  <countdown :time=\"timeUntil(data.end)\" v-if=\"(timeUntil(data.end) > 0)\">\n                    <div\n                      slot-scope=\"props\"\n                      class=\"date-text\"\n                    >Bidding closes in {{ props.days }} days, {{ props.hours }} hours, {{ props.minutes }} minutes!</div>\n                  </countdown>\n                  <div class=\"date-text\" v-if=\"(timeUntil(data.end) <= 0)\">Auction Over!</div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- hidden -->\n          <div class=\"card col-4\" ref=\"targetCard\" style=\"visibility: hidden\">\n            <div class=\"card-header\" ref=\"header\">\n              <div class=\"card-title\" style=\"position: relative\">\n                <h3>Hidden</h3>\n                <div class=\"heart\" v-bind:style=\"heartHeight\"></div>\n              </div>\n            </div>\n            <div class=\"card-body row\">\n              <div class=\"col-5 d-flex align-items-center\">\n                <img class=\"card-image\" v-bind:src=\"getImage(sample)\" />\n              </div>\n              <div class=\"col-7\">\n                <div>\n                  <p class=\"card-text\">Live!</p>\n                  <p class=\"card-text\">Current Bid : 100</p>\n                  <p class=\"card-text\">Value :100</p>\n                  <button class=\"btn btn-primary\">Bid Now!</button>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"card-footer\">\n              <countdown :time=\"100\">\n                <div\n                  slot-scope=\"props\"\n                  class=\"date-text\"\n                >Bidding closes in {{ props.days }} days, {{ props.hours }} hours, {{ props.minutes }} minutes!</div>\n              </countdown>\n            </div>\n          </div>\n          <!-- hidden -->\n        </div>\n\n        <div class=\"col-3\">\n          <b-sidebar\n            :id=\"'sidebar-' + data.id\"\n            right\n            shadow\n            v-for=\"data in favorites\"\n            :key=\"data.id\"\n          >\n            <div class=\"px-3 py-2\">\n              <div class=\"container\">\n                <div class=\"row\" id=\"gap\">\n                  <h3 id=\"name\" ref=\"sidebarName\">{{data.name}}</h3>\n                  <div\n                    class=\"heart\"\n                    v-on:click=\"toggle(data.id)\"\n                    v-bind:key=\" 'heart: ' + data.id\"\n                    v-bind:style=\"heartHeightDesktopSidebar\"\n                    v-bind:class=\"{amactive: activeKeys[activeKeys.findIndex((element) => element.id === data.id)].active}\"\n                  ></div>\n                </div>\n\n                <div class=\"row image-row\">\n                  <div class=\"col d-flex justify-content-center\">\n                    <img class=\"card-image-top\" v-bind:src=\"getImageSidebar(data.image)\" />\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col d-flex justify-content-center\">\n                    <div>\n                      <p class=\"bar-text\" id=\"description\">{{data.description}}</p>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\" id=\"date-text\">\n                  <div class=\"col d-flex justify-content-center\">\n                    <div class=\"bar-text\" v-if=\"(data.sold)\">Sold out!</div>\n                    <div class=\"bar-text\" v-if=\"(timeUntil(data.end) <= 0)\">Auction Over!</div>\n                    <countdown\n                      v-if=\"(!data.sold) && (timeUntil(data.end) > 0)\"\n                      :time=\"timeUntil(data.end)\"\n                    >\n                      <div\n                        slot-scope=\"props\"\n                        class=\"bar-text\"\n                      >Bidding closes in {{ props.days }} days, {{ props.hours }} hours, {{ props.minutes }} minutes!</div>\n                    </countdown>\n                  </div>\n                </div>\n                <div class=\"row\" id=\"bid-row\" v-if=\"(!data.sold) && timeUntil(data.end)>0\">\n                  <div class=\"col d-flex justify-content-center\">\n                    <div class=\"bidrow card-text\">\n                      <div class=\"row d-flex justify-content-center\" id=\"postinfo\">\n                        <div class=\"col\">\n                          <p class=\"bar-text\">Value: {{data.value}}</p>\n                          <p class=\"bar-text\">Current Bid: {{data.price}}</p>\n                          <p class=\"bar-text\">Minmum raise: {{data.raise}}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div\n                  class=\"row justify-content-center\"\n                  v-if=\"(!data.sold) && timeUntil(data.end)>0\"\n                >\n                  <router-link :to=\"{ name: 'post', params: {id: data.id}}\">\n                    <button class=\"btn btn-primary bar-button\">Bid Now!</button>\n                  </router-link>\n                </div>\n              </div>\n            </div>\n          </b-sidebar>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport Vue from \"vue\";\nimport cloudinary from \"cloudinary-core\";\n\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      heartHeight: {},\n      isDesktop: window.innerWidth > 800,\n      windowWidth: window.innerWidth,\n      tags: []\n    };\n  },\n  mounted() {\n    this.$store.dispatch(\"loadPosts\");\n    this.getRowHeight();\n    this.getHeight();\n  },\n  computed: {\n    favorites() {\n      var favs = [];\n      for (let i = 0; i < this.$store.state.posts.length; i++) {\n        if (this.$store.getters.findFavorite(this.$store.state.posts[i].id)) {\n          favs.push(this.$store.state.posts[i]);\n        }\n      }\n      return favs;\n    },\n    chunks() {\n      return _.chunk(Object.values(this.filteredPosts), 2);\n    },\n    activeKeys() {\n      var array = [];\n      for (let i = 0; i < this.$store.state.posts.length; i++) {\n        array.push({\n          id: this.$store.state.posts[i].id,\n          active: this.$store.getters.findFavorite(\n            this.$store.state.posts[i].id\n          )\n        });\n      }\n      return array;\n    },\n    ...mapState([\"posts\"])\n  },\n  methods: {\n     getHeight() {\n      Vue.nextTick(() => {\n        let height = this.$refs.targetCard.clientHeight;\n        height += \"px\";\n        Vue.set(this.containerStyle, \"height\", height);\n        let width = this.$refs.targetCard.clientWidth;\n        width += \"px\";\n        Vue.set(this.containerStyle, \"width\", width);\n      });\n    },\n    getImage: function(image) {\n      if (!this.isDesktop) {\n        var cl = new cloudinary.Cloudinary({\n          cloud_name: \"kemp\",\n          secure: true\n        });\n        var int = Math.round(this.windowWidth * 0.6);\n        var tag = cl.url(image, { height: int, width: int, crop: \"fill\" });\n        return tag;\n      }\n      if (this.isDesktop) {\n        Vue;\n        var cl = new cloudinary.Cloudinary({\n          cloud_name: \"kemp\",\n          secure: true\n        });\n        var int = Math.round(this.windowWidth * 0.25);\n        var tag = cl.url(image, { width: int, height: int, crop: \"fill\" });\n        return tag;\n      }\n    },\n    amIFavorited: function(id) {\n      if (this.favorites.length > 0) {\n        if (this.favorites.findIndex(element => element.id === id) != -1) {\n          return true;\n        } else return false;\n      }\n    },\n    getRowHeight() {\n      this.$nextTick(() => {\n        if (this.$refs.items) {\n          let target = this.$refs.items[0].clientHeight;\n          let factor = target / 100;\n          let string = \"scale(\" + 2 * factor + \")\";\n          Vue.set(this.heartHeight, \"transform\", string);\n        }\n      });\n    },\n    toggle: function(id) {\n      this.$store.dispatch(\"removeFavorite\", { n: id });\n    },\n\n    empty() {\n      this.$store.commit(\"clear\");\n      console.log(this.$store.state.favorites);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n#favorites {\n  align-content: center;\n}\n.card {\n  margin-bottom: 10%;\n  border: black 0.5px solid;\n  align-content: center;\n  background-color: #bfdbf7;\n}\nh3,\nh5,\np {\n  color: black;\n}\nimg {\n  margin: 5%;\n}\np {\n  margin-bottom: 5%;\n}\n\nbutton {\n  width: 40%;\n}\n.card-title {\n  margin-top: 5%;\n}\n\n.btn-primary {\n  background-color: #1f7a8c;\n  border-color: #343a40;\n  color: white;\n  margin: 5px;\n}\n.container {\n  padding-top: 100px;\n  width: 100%;\n  position: static;\n  top: 15vh;\n}\n\n.heart {\n  position: absolute;\n  top: -4%;\n  right: -10%;\n  width: 100px;\n  height: 100px;\n  background: url(\"https://cssanimation.rocks/images/posts/steps/heart.png\")\n    no-repeat;\n  background-position: 0 0;\n  cursor: pointer;\n  transition: background-position 1s steps(28);\n  transition-duration: 0s;\n\n  &.amactive {\n    transition-duration: 1s;\n    background-position: -2800px 0;\n  }\n}\n</style>"]}]}