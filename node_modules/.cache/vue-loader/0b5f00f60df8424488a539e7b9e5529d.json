{"remainingRequest":"/Users/kempatkinson/Desktop/ibid/ibid-mobile/ibidmobile-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kempatkinson/Desktop/ibid/ibid-mobile/ibidmobile-front/src/views/LogIn.vue?vue&type=style&index=0&id=933e7582&scoped=true&lang=css&","dependencies":[{"path":"/Users/kempatkinson/Desktop/ibid/ibid-mobile/ibidmobile-front/src/views/LogIn.vue","mtime":1599069697176},{"path":"/Users/kempatkinson/Desktop/ibid/ibid-mobile/ibidmobile-front/node_modules/css-loader/dist/cjs.js","mtime":1591384220692},{"path":"/Users/kempatkinson/Desktop/ibid/ibid-mobile/ibidmobile-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1591384224540},{"path":"/Users/kempatkinson/Desktop/ibid/ibid-mobile/ibidmobile-front/node_modules/postcss-loader/src/index.js","mtime":1591384222686},{"path":"/Users/kempatkinson/Desktop/ibid/ibid-mobile/ibidmobile-front/node_modules/cache-loader/dist/cjs.js","mtime":1591384219978},{"path":"/Users/kempatkinson/Desktop/ibid/ibid-mobile/ibidmobile-front/node_modules/vue-loader/lib/index.js","mtime":1591384224540}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNsb2dpbiB7CiAgICBwYWRkaW5nLXRvcDogMTAwcHg7CiAgICB3aWR0aDogMTAwJTsKICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKfQo="},{"version":3,"sources":["LogIn.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsHA;AACA;AACA;AACA;AACA;AACA","file":"LogIn.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div id=\"login\">\n    <h1>Log In</h1>\n\n    <div id=\"emailForm\">\n        <label for=\"email\">Email:</label>\n        <input type=\"text\" id=\"email\" name=\"email\" />\n        <button @click=\"checkEmail\">Next</button>\n    </div>\n    <div id=\"passwordForm\">\n        <!--        <button @click=\"forgot\">Forgot Password?</button> -->\n        <label for=\"password\">Password:</label>\n        <input type=\"text\" id=\"password\" name=\"password\" />\n        <button @click=\"logIn\">Log In</button>\n    </div>\n    <div id=\"registerForm\">\n        <form>\n            <label for=\"firstName\">First Name:</label>\n            <input type=\"text\" id=\"fName\" name=\"firstName\" />\n            <br>\n            <label for=\"lastName\">Last Name:</label>\n            <input type=\"text\" id=\"lName\" name=\"lastName\" />\n            <br>\n            <label for=\"phone\">Phone:</label>\n            <input type=\"number\" id=\"phone\" name=\"phone\" />\n            <br>\n            <button @click=\"register\">Register</button>\n\n        </form>\n    </div>\n</div>\n</template>\n\n<script>\nimport Vue from \"vue\";\nimport bcyrpt from 'bcrypt';\n\nexport default {\n    components: {},\n    name: \"test\",\n    data() {\n        return {\n            user: {},\n        };\n    },\n\n    methods: {\n        checkID() {\n            // if guest id exists in state:\n            if (this.id) {\n                // is it registered for event?\n                axios\n                    .get(\"https://localhost:5001/api/users/\" + this.id)\n                    .then(response => {\n                        // if registered for event, redirect and log in\n                        // if response is null, show register form\n                    })\n                    .catch(error => {\n                        console.log(error);\n                    });\n            } else {\n                // if no guest id, show log in\n\n                $(\"#emailForm\").show();\n            }\n        },\n        checkEmail() {\n            axios\n                .get(\"https://localhost:5001/api/users/email/\" + $(\"#email\").val())\n                .then(response => {\n                    // if email is associated with event, show password form\n                    // if email is not associated with event, show regsiter form\n                    // if email does not exist in database, make them register\n                    this.user = response.data;\n                    $(\"#passwordForm\").show();\n\n                    console.log(hashSync(\"password\", \"XNWAYOBXN71DDGG482YYA9AK5H6HQK\"))\n                })\n                .catch(error => {\n                    console.log(error);\n                    $(\"#registerForm\").show();\n                });\n\n        },\n        logIn() {\n            // get salt\n            this.getUserSalt($(\"#email\").val());\n\n        },\n        register() {\n\n        }\n    },\n    computed: {\n        getUserSalt: function (email) {\n            // axios\n            //     .get(\"https://localhost:5001/api/users/\" + email)\n            //     .then(response => {\n            //         // return salt\n            //         console.log(response)\n            //     })\n            //     .catch(error => {\n            //         console.log(error);\n            //     });\n        },\n        //hasher\n    },\n    mounted() {\n        $(\"#emailForm\").hide();\n        $(\"#passwordForm\").hide();\n        $(\"#registerForm\").hide();\n\n        this.checkID();\n    }\n};\n</script>\n\n<style scoped>\n#login {\n    padding-top: 100px;\n    width: 100%;\n    align-content: center;\n    text-align: center;\n}\n</style>\n"]}]}