{"remainingRequest":"/Users/kempatkinson/Desktop/ibidmobile2/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kempatkinson/Desktop/ibidmobile2/client/src/views/Post.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kempatkinson/Desktop/ibidmobile2/client/src/views/Post.vue","mtime":1587503365925},{"path":"/Users/kempatkinson/Desktop/ibidmobile2/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kempatkinson/Desktop/ibidmobile2/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kempatkinson/Desktop/ibidmobile2/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kempatkinson/Desktop/ibidmobile2/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAicG9zdCIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBvc3Q6IHRoaXMuJHN0b3JlLmdldHRlcnMucG9zdCh0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpLAogICAgICBiaWQ6CiAgICAgICAgdGhpcy4kc3RvcmUuZ2V0dGVycy5wb3N0KHRoaXMuJHJvdXRlLnBhcmFtcy5pZCkucHJpY2UgKwogICAgICAgIHRoaXMuJHN0b3JlLmdldHRlcnMucG9zdCh0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpLnJhaXNlCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgaW5jcmVtZW50KCkgewogICAgICB0aGlzLmJpZCA9CiAgICAgICAgcGFyc2VJbnQodGhpcy5iaWQpICsKICAgICAgICB0aGlzLiRzdG9yZS5nZXR0ZXJzLnBvc3QodGhpcy4kcm91dGUucGFyYW1zLmlkKS5yYWlzZTsKICAgIH0sCiAgICBkZWNyZW1lbnQoKSB7CiAgICAgIGlmICgKICAgICAgICB0aGlzLmJpZCA+CiAgICAgICAgcGFyc2VJbnQodGhpcy4kc3RvcmUuZ2V0dGVycy5wb3N0KHRoaXMuJHJvdXRlLnBhcmFtcy5pZCkucHJpY2UpICsKICAgICAgICAgIHRoaXMuJHN0b3JlLmdldHRlcnMucG9zdCh0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpLnJhaXNlCiAgICAgICkgewogICAgICAgIHRoaXMuYmlkID0KICAgICAgICAgIHRoaXMuYmlkIC0gdGhpcy4kc3RvcmUuZ2V0dGVycy5wb3N0KHRoaXMuJHJvdXRlLnBhcmFtcy5pZCkucmFpc2U7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBzdWJtaXQoKSB7CiAgICAgIGlmICgKICAgICAgICB0aGlzLmJpZCA+PQogICAgICAgIHBhcnNlSW50KHRoaXMuJHN0b3JlLmdldHRlcnMucG9zdCh0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpLnByaWNlKSArCiAgICAgICAgICB0aGlzLiRzdG9yZS5nZXR0ZXJzLnBvc3QodGhpcy4kcm91dGUucGFyYW1zLmlkKS5yYWlzZQogICAgICApIHsKICAgICAgICBhbGVydCgiYWxsIGdvb2QiKTsKICAgICAgICB2YXIgbmV3UG9zdCA9IHsKICAgICAgICAgIElkOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLnBvc3QodGhpcy4kcm91dGUucGFyYW1zLmlkKS5pZCwKICAgICAgICAgIE5hbWU6IHRoaXMuJHN0b3JlLmdldHRlcnMucG9zdCh0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpLm5hbWUsCiAgICAgICAgICBJbWFnZTogdGhpcy4kc3RvcmUuZ2V0dGVycy5wb3N0KHRoaXMuJHJvdXRlLnBhcmFtcy5pZCkuaW1hZ2UsCiAgICAgICAgICBQcmljZTogcGFyc2VJbnQodGhpcy5iaWQpLAogICAgICAgICAgUmFpc2U6IHBhcnNlSW50KHRoaXMuJHN0b3JlLmdldHRlcnMucG9zdCh0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpLnJhaXNlKQogICAgICAgIH07CiAgICAgICAgY29uc3QgdXJsID0KICAgICAgICAgICJodHRwczovL2xvY2FsaG9zdDo1MDAxL2FwaS9CaWRJdGVtcy8iICsgdGhpcy4kcm91dGUucGFyYW1zLmlkOwogICAgICAgIHJldHVybiBheGlvcwogICAgICAgICAgLnB1dCh1cmwsIG5ld1Bvc3QsIHsKICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIKICAgICAgICAgICAgfQogICAgICAgICAgfSkKICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJsb2FkUG9zdHMiKQogICAgICAgICAgICB0aGlzLnBvc3QgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLnBvc3QodGhpcy4kcm91dGUucGFyYW1zLmlkKQogICAgICAgICAgfSkKICAgICAgICAgIC5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yLnJlc3BvbnNlKTsKICAgICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIGFsZXJ0KCJ5b3VyIGJpZCBpcyBub3QgaGlnaCBlbm91Z2giKTsKICAgICAgfQogICAgfQogIH0KfTsK"},{"version":3,"sources":["Post.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Post.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <h2>{{post.name}}</h2>\n    <h2>{{post.image}}</h2>\n    <h2>Current Bid: {{post.price}}</h2>\n    <h3>Minmum raise: {{post.raise}}</h3>\n    <form>\n      <input contenteditable=\"true\" type=\"number\" v-model=\"bid\" />\n      <button v-on:click.prevent=\"increment\">add</button>\n      <button v-on:click.prevent=\"decrement\">minus</button>\n      <button v-on:click.prevent=\"submit\">submit bid</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"post\",\n  data() {\n    return {\n      post: this.$store.getters.post(this.$route.params.id),\n      bid:\n        this.$store.getters.post(this.$route.params.id).price +\n        this.$store.getters.post(this.$route.params.id).raise\n    };\n  },\n  methods: {\n    increment() {\n      this.bid =\n        parseInt(this.bid) +\n        this.$store.getters.post(this.$route.params.id).raise;\n    },\n    decrement() {\n      if (\n        this.bid >\n        parseInt(this.$store.getters.post(this.$route.params.id).price) +\n          this.$store.getters.post(this.$route.params.id).raise\n      ) {\n        this.bid =\n          this.bid - this.$store.getters.post(this.$route.params.id).raise;\n      }\n    },\n    async submit() {\n      if (\n        this.bid >=\n        parseInt(this.$store.getters.post(this.$route.params.id).price) +\n          this.$store.getters.post(this.$route.params.id).raise\n      ) {\n        alert(\"all good\");\n        var newPost = {\n          Id: this.$store.getters.post(this.$route.params.id).id,\n          Name: this.$store.getters.post(this.$route.params.id).name,\n          Image: this.$store.getters.post(this.$route.params.id).image,\n          Price: parseInt(this.bid),\n          Raise: parseInt(this.$store.getters.post(this.$route.params.id).raise)\n        };\n        const url =\n          \"https://localhost:5001/api/BidItems/\" + this.$route.params.id;\n        return axios\n          .put(url, newPost, {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          })\n          .then(response => {\n            console.log(response)\n            this.$store.dispatch(\"loadPosts\")\n            this.post = this.$store.getters.post(this.$route.params.id)\n          })\n          .catch(error => {\n            console.log(error.response);\n          });\n      } else {\n        alert(\"your bid is not high enough\");\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n#bid {\n  background: grey;\n}\n</style>"]}]}